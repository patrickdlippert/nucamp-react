[{"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js":"2","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"3","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js":"4","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"5","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"6","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"7","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"8","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"9","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"10","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"11","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"12","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"13","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"14","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"15","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js":"17","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js":"18","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js":"19","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js":"20"},{"size":695,"mtime":1612250240344,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1611563589979,"results":"23","hashOfConfig":"22"},{"size":568,"mtime":1613073545689,"results":"24","hashOfConfig":"22"},{"size":1545,"mtime":1612338872382,"results":"25","hashOfConfig":"22"},{"size":1242,"mtime":1612334908608,"results":"26","hashOfConfig":"22"},{"size":7477,"mtime":1613253789022,"results":"27","hashOfConfig":"22"},{"size":2027,"mtime":1613074748765,"results":"28","hashOfConfig":"22"},{"size":5014,"mtime":1612991493878,"results":"29","hashOfConfig":"22"},{"size":1949,"mtime":1612254872712,"results":"30","hashOfConfig":"22"},{"size":978,"mtime":1612583002614,"results":"31","hashOfConfig":"22"},{"size":11211,"mtime":1613078665937,"results":"32","hashOfConfig":"22"},{"size":303,"mtime":1612334925385,"results":"33","hashOfConfig":"22"},{"size":1054,"mtime":1612334920859,"results":"34","hashOfConfig":"22"},{"size":4243,"mtime":1612334916207,"results":"35","hashOfConfig":"22"},{"size":4087,"mtime":1612641515962,"results":"36","hashOfConfig":"22"},{"size":500,"mtime":1613547783748,"results":"37","hashOfConfig":"22"},{"size":190,"mtime":1613547479334,"results":"38","hashOfConfig":"22"},{"size":198,"mtime":1613547459755,"results":"39","hashOfConfig":"22"},{"size":194,"mtime":1613547405309,"results":"40","hashOfConfig":"22"},{"size":190,"mtime":1613547499216,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xe3s7w",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],["86","87"],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponent.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["88","89","90"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false,\r\n            author: '',\r\n            text: '',\r\n            touched: {\r\n                rating: false,\r\n                author: false\r\n            }\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current state is: ' + JSON.stringify(values));\r\n        alert('Current state is: ' + JSON.stringify(values));\r\n    }\r\n\r\n\r\n    // Put a react-redux form within a modal for collecting comment information. The form will\r\n    // present a rating, author name and comment field.\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}><i className=\"fa fa-pencil fa-lg\" /> Submit Comment</Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n\r\n                            {/* Rating input selection (rating) area of form */}\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        isNumber\r\n                                    }}\r\n                                >\r\n                                    <option>Select one</option>\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".rating\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        isNumber: 'A rating is required',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Your Name (author) section of form */}\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    component=\"div\"\r\n                                    messages={{\r\n                                        minLength: 'Must be at least 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Comment Text Area (text) section of form */}\r\n                            <div className=\"form-group\">\r\n                                <Label htmlFor=\"text\">Comment</Label>\r\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\" \r\n                                />\r\n                            </div>\r\n\r\n\r\n                            {/* Blue Submit Button at bottom of form */}\r\n                            <div className=\"form-group\">\r\n                                <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                            </div>\r\n                            \r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction RenderCampsite({campsite}) {\r\n    return(\r\n        <div className=\"col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={campsite.image} alt={campsite.name} />\r\n                <CardBody>\r\n                    <CardText>{campsite.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments}) {\r\n    if (comments) {\r\n        return (\r\n            <div className=\"col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                {comments.map(comment => {\r\n                    return (\r\n                        <div key={comment.id}>\r\n                            <p>{comment.text}<br />\r\n                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                            </p>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <CommentForm />\r\n            </div>\r\n        );\r\n    }\r\n    return (<div />);\r\n}\r\n\r\n\r\nfunction CampsiteInfo(props) {\r\n    if(props.campsite) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>{props.campsite.name}</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">     \r\n                    <RenderCampsite campsite={props.campsite} />\r\n                    <RenderComments comments={props.comments} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CampsiteInfo;","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["91","92","93","94","95","96","97"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current state is: ' + JSON.stringify(values));\r\n        alert('Current state is: ' + JSON.stringify(values));\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <h2>Contact Us</h2>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content align-items-center\">\r\n                    <div className=\"col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            1 Nucamp Way<br />\r\n                            Seattle, WA 98001<br />\r\n                            U.S.A.\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>                        \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 characters',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\"name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],["98","99"],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js",[],"C:\\Users\\patri\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":56,"column":33,"nodeType":"106","endLine":61,"endColumn":34},{"ruleId":"104","severity":1,"message":"107","line":83,"column":33,"nodeType":"106","endLine":90,"endColumn":35},{"ruleId":"104","severity":1,"message":"108","line":106,"column":33,"nodeType":"106","endLine":109,"endColumn":35},{"ruleId":"104","severity":1,"message":"107","line":83,"column":37,"nodeType":"106","endLine":91,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":108,"column":37,"nodeType":"106","endLine":116,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":133,"column":37,"nodeType":"106","endLine":142,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":160,"column":37,"nodeType":"106","endLine":167,"endColumn":39},{"ruleId":"104","severity":1,"message":"109","line":184,"column":45,"nodeType":"106","endLine":188,"endColumn":47},{"ruleId":"104","severity":1,"message":"105","line":194,"column":37,"nodeType":"106","endLine":195,"endColumn":66},{"ruleId":"104","severity":1,"message":"108","line":204,"column":37,"nodeType":"106","endLine":207,"endColumn":39},{"ruleId":"100","replacedBy":"110"},{"ruleId":"102","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["112"],["113"],"no-global-assign","no-unsafe-negation"]